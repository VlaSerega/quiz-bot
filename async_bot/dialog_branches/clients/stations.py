import datetime
import logging
from typing import List

from aiogram import Dispatcher, types, F
from aiogram.enums import ChatType
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove
from aiogram_media_group import media_group_handler

from async_bot.dialog_branches.clients.question import QuestionType, Question, Action
from async_bot.dialog_branches.clients.states import FSMQuestion, FSMTest
from async_bot.dialog_branches.utils import process_question, create_keyboard_reply
from database.models import User, Team

aq = [Question('–¢—ã —É–∂–µ –≤ –º—É–∑–µ–µ –ì–µ—Ä–º–∞–Ω–∞ –¢–∏—Ç–æ–≤–∞ –≤ —Å–µ–ª–µ –ü–æ–ª–∫–æ–≤–Ω–∏–∫–æ–≤–æ?',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'],
               cor_answer='–î–∞',
               incorrect_reply='–°–∫–æ—Ä–æ –ø—Ä–∏–±—É–¥–µ—à—å —Ç—É–¥–∞. –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ—Ç–µ—Ä–µ—Ç—å –∫–∞–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –æ–Ω–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ.\n'
                               '–ù–∞–∂–º–∏ <b>‚Äú–î–∞‚Äù</b>, –∫–∞–∫ –¥–æ–±–µ—Ä–µ—à—å—Å—è –¥–æ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è!'),
      Question(
          '–û—Ç–ª–∏—á–Ω–æ! –ì–µ—Ä–º–∞–Ω –¢–∏—Ç–æ–≤ - –≤—Ç–æ—Ä–æ–π –ª–µ—Ç—á–∏–∫-–∫–æ—Å–º–æ–Ω–∞–≤—Ç –≤ –º–∏—Ä–µ –∏ –ø–µ—Ä–≤—ã–π —á–µ–ª–æ–≤–µ–∫, —Å–æ–≤–µ—Ä—à–∏–≤—à–∏–π –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –ø–æ–ª–µ—Ç. –ê –∫–∞–∫ –Ω–∞ —Å—á—ë—Ç selfie c –ì–µ—Ä–º–∞–Ω–æ–º –°—Ç–µ–ø–∞–Ω–æ–≤–∏—á–µ–º? C–¥–µ–ª–∞–π —Ñ–æ—Ç–æ —Å –ª—é–±—ã–º –ø–æ—Ä—Ç—Ä–µ—Ç–æ–º –¢–∏—Ç–æ–≤–∞ –≤ –º—É–∑–µ–µ –∏ –ø—Ä–∏—à–ª–∏ –º–Ω–µ. –°–æ–±–∏—Ä–∞—é –∫–æ–ª–ª–µ–∫—Ü–∏—é. üì∏',
          QuestionType.photo),
      Question('–ö–ª–∞—Å—Å! –í—ã –æ—Ç–ª–∏—á–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ! –¢–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ñ–æ—Ç–æ?',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
               incorrect_reply='–ù—É –∏ –ª–∞–¥–Ω–æ! –ù–∞—àe –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤—Å–µ-—Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!'),
      Question('–û–≥–æ! –î–∞ –≤—ã –∫–∞–∂–µ—Ç—Å—è –ø–æ—Ö–æ–∂–∏, —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏?',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
               incorrect_reply='–ù—É –∏ –ª–∞–¥–Ω–æ! –ù–∞—àe –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤—Å–µ-—Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!'),
      Question('–ï—â—ë –æ–¥–∏–Ω —Ü–µ–Ω–Ω—ã–π –∫–∞–¥—Ä –¥–ª—è –º–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏! –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ç–µ–±—è –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫—É?',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
               incorrect_reply='–ù—É –∏ –ª–∞–¥–Ω–æ! –ù–∞—àe –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤—Å–µ-—Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!'),
      Question('–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å! –¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –≤ –º—É–∑–µ–µ?',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
               incorrect_reply='–ù—É –∏ –ª–∞–¥–Ω–æ! –ù–∞—àe –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤—Å–µ-—Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!'),
      Question('–ê —ç—Ç–æ —Ç–æ—á–Ω–æ –ì–µ—Ä–º–∞–Ω –°—Ç–µ–ø–∞–Ω–æ–≤–∏—á? –ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂.',
               QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
               incorrect_reply='–ù—É –∏ –ª–∞–¥–Ω–æ! –ù–∞—àe –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤—Å–µ-—Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!'),
      Question(
          '–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º #–û—Ç–∫—Ä—ã–≤–∞—Ç—å–ê–ª—Ç–∞–π! –ê —Ç—ã –∑–Ω–∞–µ—à—å –∫–∞–∫ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–æ—Ä–æ–≥–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –º—ã –µ–¥–µ–º? –û–Ω–∞ —Å–æ–µ–¥–∏–Ω—è–µ—Ç –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –∏ –ú–æ–Ω–≥–æ–ª–∏—é.',
          QuestionType.one, answers=['–ê–ª—Ç–∞–π—Å–∫–∞—è —Ç—Ä–∞—Å—Å–∞', '–ß—É–π—Å–∫–∏–π —Ç—Ä–∞–∫—Ç', '–°–∏–±–∏—Ä—Å–∫–∏–π —Ç—Ä–∞–∫—Ç'],
          cor_answer='–ß—É–π—Å–∫–∏–π —Ç—Ä–∞–∫—Ç',
          incorrect_reply='–ö–ª–∞—Å—Å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–æ –Ω–µ –≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!'),

      Question(
          '–í–µ—Ä–Ω–æ! –≠—Ç–æ –ß—É–π—Å–∫–∏–π —Ç—Ä–∞–∫—Ç! –°–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è –¥–æ—Ä–æ–≥–∞ –°–∏–±–∏—Ä–∏, –¢–û–ü -10 –¥–æ—Ä–æ–≥ –º–∏—Ä–∞ –ø–æ –≤–µ—Ä—Å–∏–∏ National Geographic, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –∞—Ä—Ç–µ—Ä–∏—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∏–∑–¥—Ä–µ–≤–ª–µ —Ö–æ–¥–∏–ª–∏ –∫–∞—Ä–∞–≤–∞–Ω—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–∑ –°–∏–±–∏—Ä–∏ –≤ –ú–æ–Ω–≥–æ–ª–∏—é, –ö–∏—Ç–∞–π, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω! –ß—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –Ω—É–∂–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª—É—à–∞—Ç—å —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–∞. –ì–æ—Ç–æ–≤ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—é –ß—É–π—Å–∫–æ–≥–æ —Ç—Ä–∞–∫—Ç–∞?',
          QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'], incor_action=Action.next, cor_answer='–î–∞',
          correct_reply='–û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≥–¥–∞ —Å–ª—É—à–∞–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤, –æ—Ç–≤–µ—Ç—å:',
          incorrect_reply='–ù—É —á—Ç–æ –∂. –Ø —Ç–æ–∂–µ –Ω–µ –≤—Å–µ–≥–¥–∞ —Å–ª—É—à–∞—é —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–∞. –ü—Ä–∏–¥–µ—Ç—Å—è —Ç–µ–±–µ —É–≥–∞–¥—ã–≤–∞—Ç—å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–∞.'),
      Question(
          '–ö–∞–∫–∞—è –¥–ª–∏–Ω–∞ —É –ß—É–π—Å–∫–æ–≥–æ —Ç—Ä–∞–∫—Ç–∞?',
          QuestionType.one, answers=['953 –∫–º', '1888 –∫–º', '370 –∫–º'],
          cor_answer='953 –∫–º',
          correct_reply='–í–µ—Ä–Ω–æ! –î–ª–∏–Ω–∞ –ß—É–π—Å–∫–æ–≥–æ —Ç—Ä–∞–∫—Ç–∞ –æ—Ç –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞ –¥–æ –≥—Ä–∞–Ω–∏—Ü—ã —Å –ú–æ–Ω–≥–æ–ª–∏–µ–π 953 –∫–º.',
          incorrect_reply='–ö–∞–∂–µ—Ç—Å—è —Ç—ã –Ω–µ–º–Ω–æ–≥–æ –æ—à–∏–±—Å—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.'),
      Question(
          '–í—ã —É–∂–µ –¥–æ–±—Ä–∞–ª–∏—Å—å –¥–æ –ë–∏–π—Å–∫–∞?',
          QuestionType.one, answers=['–î–∞', '–ï—â–µ –Ω–µ—Ç'],
          cor_answer='–î–∞', sticker_correct='CAACAgIAAxkBAAPiZPw8yOqJhylJAwoJ5Xket9hNGGYAArQsAAKucNBIdMQwb5fhvYQwBA',
          incorrect_reply='–î–∞, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ë–∏–π—Å–∫–∞ –Ω–µ–º–∞–ª–µ–Ω—å–∫–æ–µ - 162 –∫–º –æ—Ç –ë–∞—Ä–Ω–∞—É–ª–∞. –ï—Å–ª–∏ —Ç–µ–±–µ —Å–∫—É—á–Ω–æ, —Å–ø—Ä–æ—Å–∏ —É —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–∞: –ì–¥–µ –∂–∏–≤–µ—Ç –±–æ–±–µ—Ä?\n'
                          '–ù–∞–∂–º–∏ <b>‚Äú–î–∞‚Äù</b>, –∫–∞–∫ –¥–æ–±–µ—Ä–µ—à—å—Å—è –¥–æ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è!'),

      Question(
          '–û—Ç–ª–∏—á–Ω–æ! –ë–∏–π—Å–∫ - –æ–¥–∏–Ω –∏–∑ –º–æ–∏—Ö –ª—é–±–∏–º—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –ê–ª—Ç–∞–π—Å–∫–æ–≥–æ –∫—Ä–∞—è! –û–Ω –±—ã–ª –æ–±—Ä–∞–∑–æ–≤–∞–Ω –ø–æ —É–∫–∞–∑—É –ü–µ—Ç—Ä–∞ I, –∑–¥–µ—Å—å –º–Ω–æ–≥–æ —Å—Ç–∞—Ä—ã—Ö –∑–¥–∞–Ω–∏–π, –º–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ª–µ–≥–µ–Ω–¥ –∏ –∑–∞–≥–∞–¥–æ–∫, –∞ –∑–Ω–∞—á–∏—Ç - –º–Ω–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–Ø –≤ –ë–∏–π—Å–∫–µ!" —Å—Ä–∞–∑—É, –∫–∞–∫ –≤—ä–µ–¥–µ—à—å –≤ –≥–æ—Ä–æ–¥.',
          QuestionType.one, answers=['–Ø –≤ –ë–∏–π—Å–∫–µ'], incor_action=Action.next,
          cor_answer='–Ø –≤ –ë–∏–π—Å–∫–µ', ),
      Question(
          '–û—Ç–ª–∏—á–Ω–æ! –í–∏–¥–µ–ª –∫–∞–∫–∏–µ —É—Å—ã —É –í–µ–ª–∏–∫–æ–≥–æ –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞? –°–¥–µ–ª–∞–π —Å–µ–±–µ —Ç–∞–∫–∏–µ –∂–µ —Å –ø–æ–º–æ—â—å—é –ø–∞–ª—å—Ü–µ–≤ –∏ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Å—è –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏ –≤–æ–∑–ª–µ –ø–∞–º—è—Ç–Ω–∏–∫–∞ –ü–µ—Ç—Ä—É I. –ñ–¥—É —Ñ–æ—Ç–æ –≤ —á–∞—Ç–µ ‚Äî —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—á–µ–Ω—å –∑–∞–±–∞–≤–Ω–æ.',
          QuestionType.photo, sticker_correct='CAACAgIAAxkBAAIDBmUCo1rrURMszOzZTEwRbBlZSIv-AAJ6NQACTyjRSM7mUyhJ7UrzMAQ',
          correct_reply='–ê—Ö–∞—Ö–∞, –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ–µ —Ñ–æ—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!'),
      Question(
          '–ê —Ç–µ–ø–µ—Ä—å –º—ã –ø–æ—Å–µ—Ç–∏–º –æ–¥–∏–Ω –∏–∑ –º—É–∑–µ–µ–≤ –ë–∏–π—Å–∫–∞ - —Å—Ç–∞—Ä—ã–π –æ—Å–æ–±–Ω—è–∫. –° –ø—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏ üëª. –ï—Å–ª–∏ –≤—ã–±–µ—Ä–µ—à—å—Å—è –æ—Ç—Ç—É–¥–∞, –¥–∞–π –∑–Ω–∞—Ç—å, –∫–∞–∫ —Ç–µ–±–µ —Ç–∞–∫–∞—è –≠–ö–°–ö–£–†–°–ò–Ø üò±.\n(–ñ–¥—É –æ—Ç —Ç–µ–±—è —Å—Ç–∏–∫–µ—Ä)',
          QuestionType.sticker,
          sticker_correct='CAACAgIAAxkBAAIBnWT8UNABp6abpY-8nOxv0nXTllZPAAJJLQACwCjZSJklXdyBsY7eMAQ',
          correct_reply='–Ø —Ç–∞–∫ –∏ –¥—É–º–∞–ª! –ú–Ω–µ —Ç–æ–∂–µ —Ç–∞–º –±—ã–≤–∞–µ—Ç –Ω–µ –ø–æ —Å–µ–±–µ.'),
      Question('–ê —Ç—ã –∑–Ω–∞–ª, —á—Ç–æ –ë–∏–π—Å–∫ - –∫—É–ø–µ—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥?', QuestionType.one, answers=['–î–∞', '–ù–µ—Ç'],
               incor_action=Action.next, cor_answer='–î–∞', correct_reply='–ó–¥–æ—Ä–æ–≤–æ, —á—Ç–æ —Ç—ã —Å–ª—É—à–∞–µ—à—å —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–∞!',
               incorrect_reply='–Ø —Ç–æ–∂–µ –Ω–µ –≤—Å–µ–≥–¥–∞ —Å–ª—É—à–∞—é —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥–∞.'),
      Question(
          '–Ø –ø—Ä–∏–¥—É–º–∞–ª —Ç–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å–∫–∞–∂–µ—Ç, —Å–º–æ–≥ –ª–∏ —Ç—ã —Å—Ç–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–º –∫—É–ø—Ü–æ–º (–±–∏–∑–Ω–µ—Å–º–µ–Ω–æ–º) 100 –ª–µ—Ç –Ω–∞–∑–∞–¥, –∂–º–∏ "C—Ç–∞—Ä—Ç" –∏ –ø–æ–µ—Ö–∞–ª–∏!',
          QuestionType.one, answers=['–°—Ç–∞—Ä—Ç'], cor_answer='–°—Ç–∞—Ä—Ç', state=FSMTest.test),
      Question(
          '–°–µ–π—á–∞—Å –º—ã –ø–æ—Å–µ—Ç–∏–º –ë–∏–π—Å–∫–æ–µ –∞—Ä—Ö–∏–µ—Ä–µ–π—Å–∫–æ–µ –ø–æ–¥–≤–æ—Ä—å–µ. –ó–¥–∞–Ω–∏–µ –ø–æ–¥–≤–æ—Ä—å—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –≤ 1880 –≥–æ–¥—É. –î–∞‚Äî–¥–∞, —Ç–æ–≥–¥–∞ –µ—â—ë –Ω–µ —Ä–æ–¥–∏–ª–∞—Å—å –¥–∞–∂–µ —Ç–≤–æ—è –±–∞–±—É—à–∫–∞. –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–π, –∫–æ–º–Ω–∞—Ç—ã –∫–∞–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤ –µ—Å—Ç—å –≤ –ø–æ–¥–≤–æ—Ä—å–µ. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ—Å–µ—Ç–∏—à—å —ç–∫—Å–∫—É—Ä—Å–∏—é, –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–∫–µ—Ä, —Å —Ç–≤–æ–µ–π —ç–º–æ—Ü–∏–µ–π –æ—Ç —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞.',
          QuestionType.sticker, correct_reply='–ö–ª–∞—Å—Å! –í–∏–∂—É, —á—Ç–æ –ê—Ä—Ö–∏–µ—Ä–µ–π—Å–∫–æ–µ –ø–æ–¥–≤–æ—Ä—å–µ –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–æ —Ç–µ–±—è —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º.'),
      Question('–ö–æ–º–Ω–∞—Ç–∞ –∫–∞–∫–æ–≥–æ —Ü–≤–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?',
               QuestionType.any, answers=['üî¥ –ö—Ä–∞—Å–Ω—ã–π', 'üü° –ñ–µ–ª—Ç—ã–π', 'üü¢ –ó–µ–ª–µ–Ω—ã–π', 'üîµ –°–∏–Ω–∏–π']),
      Question('–°–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', QuestionType.one, answers=['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ'],
               cor_answer='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ'),
      Question(
          '–ù—É —á—Ç–æ, –Ω–∞—Å –∂–¥–µ—Ç –æ–±—Ä–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Å—Ç–æ–ª–∏—Ü—É –ê–ª—Ç–∞–π—Å–∫–æ–≥–æ –∫—Ä–∞—è - –≥–æ—Ä–æ–¥ –ë–∞—Ä–Ω–∞—É–ª! –û—Ç–ø—Ä–∞–≤—å —Å—Ç–∏–∫–µ—Ä —Å –∫–æ—Ç–æ—Ä—ã–º —É —Ç–µ–±—è –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥.',
          QuestionType.sticker,
          sticker_correct='CAACAgIAAxkBAAIDCmUCpJ9MdEymhmBKseNVheHK7qEDAAJ9LQACLpDYSExlbu0ojEi7MAQ'),
      Question(
          '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –∫–≤–µ—Å—Ç #–û—Ç–∫—Ä—ã–≤–∞–π–ê–ª—Ç–∞–π! –ü–æ–∫–∞–∂–∏ —ç–∫—Å–∫—É—Ä—Å–æ–≤–æ–¥—É —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∏ —Å–≤–æ–π –ø—Ä–∏–∑!',
          QuestionType.one, answers=['–ó–∞–±—Ä–∞–ª –ø–æ–¥–∞—Ä–æ–∫'],
          sticker_correct='CAACAgIAAxkBAAIDCmUCpJ9MdEymhmBKseNVheHK7qEDAAJ9LQACLpDYSExlbu0ojEi7MAQ',
          cor_answer='–ó–∞–±—Ä–∞–ª –ø–æ–¥–∞—Ä–æ–∫'
      ),
      Question(
          '–ö–ª–∞—Å—Å! –ù–æ —ç—Ç–æ –µ—â—ë –Ω–µ –≤—Å–µ! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤—Å–µ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å—Ç–∏–∫–µ—Ä–∞–º–∏ —Å –ú–∞—Ä–µ–π –∏ –ú–∞—Ä–∏–∫–æ–º, –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–∏ –∏—Ö —Å–µ–±–µ, –µ—Å–ª–∏ –Ω–µ —Å–¥–µ–ª–∞–ª —ç—Ç–æ–≥–æ —Ä–∞–Ω—å—à–µ\n\n'
          '–ê –µ—â—ë –º—ã —Å –ú–∞—Ä–µ–π —Å–æ–∑–¥–∞–ª–∏ —á–∞—Ç, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –æ–±—â–∞—Ç—å—Å—è –∏ –¥–µ–ª–∏—Ç—å—Å—è –≤–ø–µ—á–∞—Ç–ª–Ω–∏—è–º–∏ —Å —Ç–∞–∫–∏–º–∏ –∂–µ –û—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—è–º–∏ –ê–ª—Ç–∞—è! –ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ <a href="https://t.me/+Dk7LT5zYUyYzMzMy">—Å—Å—ã–ª–∫–µ</a>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è —Å –Ω–∞–º–∏!',
          QuestionType.one, answers=['–ó–∞–≤–µ—Ä—à–∏—Ç—å'], cor_answer='–ó–∞–≤–µ—Ä—à–∏—Ç—å'
      ),
      Question('–ù–∞ —Å–µ–≥–æ–¥–Ω—è —ç—Ç–æ –≤—Å–µ! –ú—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–≤—Ç—Ä–∞.\n–ù–∞–∂–º–∏ –∑–∞–≤—Ç—Ä–∞ –∫–Ω–æ–ø–∫—É "–ï–¥–µ–º –¥–∞–ª—å—à–µ!"',
               answers=['–ï–¥–µ–º –¥–∞–ª—å—à–µ!'], cor_answer='–ï–¥–µ–º –¥–∞–ª—å—à–µ!')
      ]

questions = {
    Team.marik: [aq[0], aq[1], aq[2:7], aq[7], aq[8], aq[9], aq[10], aq[11], aq[12], aq[13], aq[14], aq[15], aq[22],
                 aq[16], aq[17], aq[18], aq[19], aq[20], aq[21]],
    Team.marea: [aq[9], aq[10], aq[11], aq[12], aq[16], aq[17], aq[14], aq[15], aq[22], aq[0],
                 aq[1], aq[2:7], aq[18], aq[19], aq[20], aq[21]]
}

close_keyboard = '\n\n<i>(—Å–≤–µ—Ä–Ω–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤)</i>'


async def go(message: types.Message, user: User, state: FSMContext):
    await state.set_state(FSMQuestion.question)

    data = {'current': questions[user.team][0], 'current_num': 0, 'selected_answers': [],
            'start': datetime.datetime.now()}
    await state.update_data(data)

    await process_question(message, questions[user.team][0])


async def message_answer(message: types.Message, user: User, state: FSMContext):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    next = q_num
    print(question.type)
    if question.type != QuestionType.one:
        await message.delete()
        return

    text = message.text
    if text != question.cor_answer:
        if question.incorrect_reply is None:
            await message.delete()
            return
        if question.incor_action == Action.next:
            keyboard = None
            next = q_num + 1
        else:
            keyboard = create_keyboard_reply(question.answers, [len(question.answers)])
        if question.sticker_incor is not None:
            await message.answer_sticker(question.sticker_incor)
        await message.answer(question.incorrect_reply, reply_markup=keyboard)
    else:
        if question.correct_reply is not None:
            await message.answer(question.correct_reply)
        if question.sticker_correct is not None:
            await message.answer_sticker(question.sticker_correct)
        next = q_num + 1

    if next >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return
    if q_num != next:
        question = await process_question(message, questions[user.team][q_num + 1])
        await state.update_data(current=question, current_num=q_num + 1)


async def photo_answer(messages: List[types.Message], user: User, state: FSMContext):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']

    if question.type != QuestionType.photo:
        await messages[-1].delete()
        return

    await redirect_photo(messages)

    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await messages[-1].answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(messages[-1], questions[user.team][q_num + 1], close_keyboard)
    await state.update_data(current=question, current_num=q_num + 1)


async def sticker_answer(message: types.Message, user: User, state: FSMContext):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    if question.type != QuestionType.sticker:
        await message.delete()
        return

    if question.correct_reply is not None:
        await message.answer(question.correct_reply)

    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(message, questions[user.team][q_num + 1], close_keyboard)
    await state.update_data(current=question, current_num=q_num + 1)


async def red_room(message: types.Message, state: FSMContext, user: User):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    if question.type != QuestionType.any:
        await message.delete()
        return

    await message.answer(
        '–ö—Ä–∞—Å–Ω—ã–π - —Å–∞–º—ã–π —è—Ä–∫–∏–π, –æ–≥–Ω–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç. –í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ —Ä–∞–Ω—å—à–µ –±—ã–ª –∫–∞–±–∏–Ω–µ—Ç –≤–∞–∂–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏. –¢–≤–æ–π –≤—ã–±–æ—Ä –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç—ã —Å–∏–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, —É —Ç–µ–±—è –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏, —Ç—ã —É–º–µ–µ—à—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç—å, –Ω–µ –±–æ–∏—à—å—Å—è –±—Ä–∞—Ç—å –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.')

    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(message, questions[user.team][q_num + 1])
    await state.update_data(current=question, current_num=q_num + 1)


async def yellow_room(message: types.Message, state: FSMContext, user: User):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    if question.type != QuestionType.any:
        await message.delete()
        return

    await message.answer(
        '–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ —á–∞—Å—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤–∞–∂–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å–æ–≤–æ–≤–∞–ª –ª–∏–¥–µ—Ä. –ñ–µ–ª—Ç—ã–π - —Ü–≤–µ—Ç –ª–∏–¥–µ—Ä–∞, –µ—Å–ª–∏ —Ç—ã –≤—ã–±—Ä–∞–ª —ç—Ç—É –∫–æ–º–Ω–∞—Ç—É, –∑–Ω–∞—á–∏—Ç –≤ —Ç–µ–±–µ –µ—Å—Ç—å –ª–∏–¥–µ—Ä—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞, —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –∏ –≤–µ—Å—Ç–∏ –∑–∞ —Å–æ–±–æ–π.')
    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(message, questions[user.team][q_num + 1])
    await state.update_data(current=question, current_num=q_num + 1)


async def green_room(message: types.Message, state: FSMContext, user: User):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    if question.type != QuestionType.any:
        await message.delete()
        return

    await message.answer(
        '–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ —Ä–∞–Ω—å—à–µ –±—ã–ª –∫–∞–±–∏–Ω–µ—Ç, –≥–¥–µ –¥–µ–Ω—å –∑–∞ –¥–Ω–µ–º –∫–∏–ø–µ–ª–∞ —Ä–∞–∑–º–µ—Ä–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞. –í—ã–±–æ—Ä —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç—ã –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç—ã —Å–ø–æ–∫–æ–π–Ω—ã–π, —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–π, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞–ª—å–Ω–æ —Ä–∞–∑–∏–≤–∏—Ç—ã–π, —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–π, –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∏ –æ–±—ä—ë–º–Ω—ã–µ –∑–∞–¥–∞—á–∏.')
    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(message, questions[user.team][q_num + 1])
    await state.update_data(current=question, current_num=q_num + 1)


async def blue_room(message: types.Message, state: FSMContext, user: User):
    data = await state.get_data()
    question = data['current']
    q_num = data['current_num']
    if question.type != QuestionType.any:
        await message.delete()
        return

    await message.answer(
        '–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ —Ä–∞–Ω–µ–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å —Ä–∞–∑–Ω–æ–≥–æ —Ä–æ–¥–∞ —Å–æ–±—Ä–∞–Ω–∏—è –∏ –ø—Ä–∏–Ω–∏–º–∞–ª–∏—Å—å –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç—ã –≤—ã–±—Ä–∞–ª —ç—Ç—É –∫–æ–º–Ω–∞—Ç—É ‚Äî —ç—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –æ—á–µ–Ω—å –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ —É —Ç–µ–±—è –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π, —Ç—ã —É–º–µ–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–Ω—É—é –∏ –ª–µ–≥–∫—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ.')
    if q_num + 1 >= len(questions[user.team]):
        await state.clear()
        await message.answer("–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å!", reply_markup=ReplyKeyboardRemove())
        return

    question = await process_question(message, questions[user.team][q_num + 1])
    await state.update_data(current=question, current_num=q_num + 1)


CHAT_ID = 1


async def redirect_photo(messages: List[types.Message]):
    bot = messages[-1].bot

    await bot.forward_message(CHAT_ID, messages[-1].chat.id, messages[-1].message_id)


async def print_chat_id(message: types.Message):
    logging.info(f'---------------- {message.chat.id}')


def register_stations(dp: Dispatcher):
    dp.message.register(print_chat_id, F.chat_type == ChatType.CHANNEL)
    dp.message.register(go, F.text == "üöå –ü–æ–µ—Ö–∞–ª–∏")
    # dp.register_callback_query_handler(callback_answer, callback_data_answer.filter(), state=FSMQuestion.question)
    # dp.register_callback_query_handler(callback_send_answers, CallbackData('–û—Ç–≤–µ—Ç').filter(),
    #                                    state=FSMQuestion.question)
    dp.message.register(red_room, F.text == 'üî¥ –ö—Ä–∞—Å–Ω—ã–π', FSMQuestion.question)
    dp.message.register(yellow_room, F.text == 'üü° –ñ–µ–ª—Ç—ã–π', FSMQuestion.question)
    dp.message.register(green_room, F.text == 'üü¢ –ó–µ–ª–µ–Ω—ã–π', FSMQuestion.question)
    dp.message.register(blue_room, F.text == 'üîµ –°–∏–Ω–∏–π', FSMQuestion.question)
    dp.message.register(message_answer, F.text, FSMQuestion.question)
    dp.message.register(photo_answer, F.photo, FSMQuestion.question)
    dp.message.register(sticker_answer, F.sticker, FSMQuestion.question)

    dp.message.register(media_group_handler(redirect_photo), F.photo)
